From 44a49868b6066c4832eafffc7773e036be66a92b Mon Sep 17 00:00:00 2001
From: Dongli Si <sidongli1997@gmail.com>
Date: Tue, 30 Jul 2024 15:47:41 +0800
Subject: [PATCH] x86: Enable virtio over mmio function

---
 builtin-run.c | 2 +-
 virtio/core.c | 2 +-
 virtio/mmio.c | 9 +++++++++
 x86/kvm.c     | 3 +++
 4 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/builtin-run.c b/builtin-run.c
index c26184e..63ff6f3 100644
--- a/builtin-run.c
+++ b/builtin-run.c
@@ -182,7 +182,7 @@ static int loglevel_parser(const struct option *opt, const char *arg, int unset)
 	" in megabytes (M)"
 #endif
 
-#if defined(CONFIG_ARM) || defined(CONFIG_ARM64) || defined(CONFIG_RISCV)
+#if defined(CONFIG_ARM) || defined(CONFIG_ARM64) || defined(CONFIG_RISCV) || defined(CONFIG_X86_64)
 #define VIRTIO_TRANS_OPT_HELP_SHORT    "[pci|pci-legacy|mmio|mmio-legacy]"
 #else
 #define VIRTIO_TRANS_OPT_HELP_SHORT    "[pci|pci-legacy]"
diff --git a/virtio/core.c b/virtio/core.c
index b77e987..8cc53e1 100644
--- a/virtio/core.c
+++ b/virtio/core.c
@@ -31,7 +31,7 @@ int virtio_transport_parser(const struct option *opt, const char *arg, int unset
 			*type = VIRTIO_PCI;
 		} else if (!strcmp(arg, "pci-legacy")) {
 			*type = VIRTIO_PCI_LEGACY;
-#if defined(CONFIG_ARM) || defined(CONFIG_ARM64) || defined(CONFIG_RISCV)
+#if defined(CONFIG_ARM) || defined(CONFIG_ARM64) || defined(CONFIG_RISCV) || defined(CONFIG_X86_64)
 		} else if (!strcmp(arg, "mmio")) {
 			*type = VIRTIO_MMIO;
 		} else if (!strcmp(arg, "mmio-legacy")) {
diff --git a/virtio/mmio.c b/virtio/mmio.c
index fae73b5..28c90f6 100644
--- a/virtio/mmio.c
+++ b/virtio/mmio.c
@@ -146,12 +146,15 @@ static void generate_virtio_mmio_fdt_node(void *fdt,
 }
 #endif
 
+extern char *extern_cmdline;
+
 int virtio_mmio_init(struct kvm *kvm, void *dev, struct virtio_device *vdev,
 		     int device_id, int subsys_id, int class)
 {
 	bool legacy = vdev->legacy;
 	struct virtio_mmio *vmmio = vdev->virtio;
 	int r;
+	char cmdline[100];
 
 	vmmio->addr	= virtio_mmio_get_io_space_block(VIRTIO_MMIO_IO_SIZE);
 	vmmio->kvm	= kvm;
@@ -197,6 +200,12 @@ int virtio_mmio_init(struct kvm *kvm, void *dev, struct virtio_device *vdev,
 	pr_debug("virtio-mmio.devices=0x%x@0x%x:%d", VIRTIO_MMIO_IO_SIZE,
 		 vmmio->addr, vmmio->irq);
 
+#ifdef CONFIG_X86_64
+	memset(cmdline, 0, sizeof(cmdline));
+	sprintf(cmdline, " virtio-mmio.device=0x%x@0x%x:%d", VIRTIO_MMIO_IO_SIZE, vmmio->addr, vmmio->irq);
+	strcat(extern_cmdline, cmdline);
+#endif
+
 	return 0;
 }
 
diff --git a/x86/kvm.c b/x86/kvm.c
index e07d964..0e2fb3a 100644
--- a/x86/kvm.c
+++ b/x86/kvm.c
@@ -239,6 +239,8 @@ static bool load_flat_binary(struct kvm *kvm, int fd_kernel)
 
 static const char *BZIMAGE_MAGIC = "HdrS";
 
+char *extern_cmdline;
+
 static bool load_bzimage(struct kvm *kvm, int fd_kernel, int fd_initrd,
 			 const char *kernel_cmdline)
 {
@@ -281,6 +283,7 @@ static bool load_bzimage(struct kvm *kvm, int fd_kernel, int fd_initrd,
 		die_perror("kernel read");
 
 	p = guest_flat_to_host(kvm, BOOT_CMDLINE_OFFSET);
+	extern_cmdline = p;
 	if (kernel_cmdline) {
 		cmdline_size = strlen(kernel_cmdline) + 1;
 		if (cmdline_size > boot.hdr.cmdline_size)
-- 
2.44.0

