From 8c21c6c32e4a80fa0479f44bbd9fc4b81f78e20a Mon Sep 17 00:00:00 2001
From: Dongli Si <sidongli1997@gmail.com>
Date: Sat, 27 Apr 2024 23:22:58 +0800
Subject: [PATCH] add arm64 nested virtualization, only supports single vcpu

Signed-off-by: Dongli Si <sidongli1997@gmail.com>
---
 arch/src/aarch64/fdt.rs   | 2 +-
 hypervisor/src/kvm/mod.rs | 4 ++--
 vmm/src/cpu.rs            | 1 +
 3 files changed, 4 insertions(+), 3 deletions(-)

diff --git a/arch/src/aarch64/fdt.rs b/arch/src/aarch64/fdt.rs
index af2695d0..52aba216 100644
--- a/arch/src/aarch64/fdt.rs
+++ b/arch/src/aarch64/fdt.rs
@@ -731,7 +731,7 @@ fn create_psci_node(fdt: &mut FdtWriter) -> FdtWriterResult<()> {
     // Two methods available: hvc and smc.
     // As per documentation, PSCI calls between a guest and hypervisor may use the HVC conduit instead of SMC.
     // So, since we are using kvm, we need to use hvc.
-    fdt.property_string("method", "hvc")?;
+    fdt.property_string("method", "smc")?;
     fdt.end_node(psci_node)?;
 
     Ok(())
diff --git a/hypervisor/src/kvm/mod.rs b/hypervisor/src/kvm/mod.rs
index 6d91452f..37c62623 100644
--- a/hypervisor/src/kvm/mod.rs
+++ b/hypervisor/src/kvm/mod.rs
@@ -1826,14 +1826,14 @@ impl cpu::Vcpu for KvmVcpu {
         #[allow(non_upper_case_globals)]
         // PSR (Processor State Register) bits.
         // Taken from arch/arm64/include/uapi/asm/ptrace.h.
-        const PSR_MODE_EL1h: u64 = 0x0000_0005;
+        const PSR_MODE_EL2h: u64 = 0x0000_0009;
         const PSR_F_BIT: u64 = 0x0000_0040;
         const PSR_I_BIT: u64 = 0x0000_0080;
         const PSR_A_BIT: u64 = 0x0000_0100;
         const PSR_D_BIT: u64 = 0x0000_0200;
         // Taken from arch/arm64/kvm/inject_fault.c.
         const PSTATE_FAULT_BITS_64: u64 =
-            PSR_MODE_EL1h | PSR_A_BIT | PSR_F_BIT | PSR_I_BIT | PSR_D_BIT;
+            PSR_MODE_EL2h | PSR_A_BIT | PSR_F_BIT | PSR_I_BIT | PSR_D_BIT;
 
         let kreg_off = offset_of!(kvm_regs, regs);
 
diff --git a/vmm/src/cpu.rs b/vmm/src/cpu.rs
index aa3589f6..ac4c1084 100644
--- a/vmm/src/cpu.rs
+++ b/vmm/src/cpu.rs
@@ -416,6 +416,7 @@ impl Vcpu {
             .map_err(Error::VcpuArmPreferredTarget)?;
         // We already checked that the capability is supported.
         kvi.features[0] |= 1 << kvm_bindings::KVM_ARM_VCPU_PSCI_0_2;
+        kvi.features[0] |= 1 << kvm_bindings::KVM_ARM_VCPU_HAS_EL2;
         if vm
             .as_any()
             .downcast_ref::<hypervisor::kvm::KvmVm>()
-- 
2.41.0

